Token(type=AT, literal='@', line=1, column=1)
Token(type=IDENTIFIER, literal='main', line=1, column=2)
Token(type=LBRACE, literal='{', line=2, column=1)
Token(type=IDENTIFIER, literal='x', line=3, column=5)
Token(type=COLON, literal=':', line=3, column=6)
Token(type=IDENTIFIER, literal='i32', line=3, column=8)
Token(type=COLON_ASSIGN, literal=':=', line=3, column=12)
Token(type=INTEGER, literal='7', line=3, column=15)
Token(type=IDENTIFIER, literal='x', line=4, column=5)
Token(type=COLON_ASSIGN, literal=':=', line=4, column=7)
Token(type=INTEGER, literal='8', line=4, column=9)
Token(type=IDENTIFIER, literal='y', line=5, column=5)
Token(type=COLON, literal=':', line=5, column=6)
Token(type=IDENTIFIER, literal='i32', line=5, column=8)
Token(type=COLON_ASSIGN, literal=':=', line=5, column=12)
Token(type=IDENTIFIER, literal='x', line=5, column=15)
Token(type=IDENTIFIER, literal='x', line=6, column=5)
Token(type=COLON_ASSIGN, literal=':=', line=6, column=7)
Token(type=IDENTIFIER, literal='x', line=6, column=10)
Token(type=PLUS, literal='+', line=6, column=11)
Token(type=INTEGER, literal='1', line=6, column=12)
Token(type=IDENTIFIER, literal='print', line=7, column=5)
Token(type=LPAREN, literal='(', line=7, column=10)
Token(type=IDENTIFIER, literal='x', line=7, column=11)
Token(type=RPAREN, literal=')', line=7, column=12)
Token(type=IDENTIFIER, literal='print', line=8, column=5)
Token(type=LPAREN, literal='(', line=8, column=10)
Token(type=IDENTIFIER, literal='y', line=8, column=11)
Token(type=RPAREN, literal=')', line=8, column=12)
Token(type=IDENTIFIER, literal='z', line=9, column=5)
Token(type=COLON, literal=':', line=9, column=6)
Token(type=TILDE, literal='~', line=9, column=8)
Token(type=IDENTIFIER, literal='i32', line=9, column=9)
Token(type=ASSIGN, literal='=', line=9, column=13)
Token(type=INTEGER, literal='8', line=9, column=15)
Token(type=IDENTIFIER, literal='z', line=10, column=5)
Token(type=ASSIGN, literal='=', line=10, column=7)
Token(type=IDENTIFIER, literal='z', line=10, column=9)
Token(type=ASTERISK, literal='*', line=10, column=11)
Token(type=INTEGER, literal='5', line=10, column=13)
Token(type=IDENTIFIER, literal='print', line=11, column=5)
Token(type=LPAREN, literal='(', line=11, column=10)
Token(type=IDENTIFIER, literal='z', line=11, column=11)
Token(type=RPAREN, literal=')', line=11, column=12)
Token(type=IDENTIFIER, literal='condition', line=12, column=5)
Token(type=COLON, literal=':', line=12, column=14)
Token(type=IDENTIFIER, literal='bool', line=12, column=16)
Token(type=COLON_ASSIGN, literal=':=', line=12, column=21)
Token(type=TRUE, literal='true', line=12, column=24)
Token(type=IDENTIFIER, literal='print', line=13, column=5)
Token(type=LPAREN, literal='(', line=13, column=10)
Token(type=IDENTIFIER, literal='condition', line=13, column=11)
Token(type=RPAREN, literal=')', line=13, column=20)
Token(type=IDENTIFIER, literal='lang_name', line=14, column=5)
Token(type=COLON, literal=':', line=14, column=14)
Token(type=IDENTIFIER, literal='str', line=14, column=16)
Token(type=COLON_ASSIGN, literal=':=', line=14, column=20)
Token(type=STRING, literal='Nyan ~ !', line=14, column=23)
Token(type=IDENTIFIER, literal='print', line=15, column=5)
Token(type=LPAREN, literal='(', line=15, column=10)
Token(type=IDENTIFIER, literal='lang_name', line=15, column=11)
Token(type=RPAREN, literal=')', line=15, column=20)
Token(type=RBRACE, literal='}', line=16, column=1)
Token(type=IDENTIFIER, literal='main', line=17, column=1)
Token(type=SEMICOLON, literal=';', line=17, column=5)